---  
- hosts: localhost  
  connection: local  
  gather_facts: no    
  vars:  
    region: us-west-2         
    instance_type: m4.4xlarge    
    image: ami-6ffe1c17    # use Chad's AMI for your region. Ref: https://drive.google.com/file/d/0B5rTQrCFLTYrMmZDNldtZzlMdXM/view
    key: rajeshr-se-aws-us-west-2  
    subnet_id: subnet-5e5a1906
    sec_grp_id: sg-0e469975
    nodes_inventory : "ec2_nodes_list" # don't change
    #terminate_inventory: "ec2_terminate_list"
  tasks:  
    - name: launching 'COUNT' number of ec2 nodes (with tags required for SE-VPC)
      ec2:
        region: "{{ region }}"  
        key_name: "{{ key }}"  
        instance_type: "{{ instance_type }}"    
        image: "{{ image }}"  
        vpc_subnet_id: "{{ subnet_id }}"
        group_id: "{{ sec_grp_id }}"
        count: "{{ COUNT|default('5') }}" # NOTE: Specify COUNT param on cmd line
        wait: yes    
        instance_tags:  
          Name: "{{ NAME|default('CHANGE-THIS-DEFAULT-PROJ-NAME') }}" # NOTE: Specify USER_TAG param on cmd line
          user: rradhakrishnan  # required tag for MAPRSE-AWS account
          User: rradhakrishnan  # required tag for MAPRSE-AWS account
          Note: "{{ NOTE|default('dev') }}" # NOTE: If necessary, add info to this NOTE param on cmd line
        user_data: |
          #!/bin/bash -x
          adduser -m --uid 5000 --user-group mapr
          usermod -a -G root mapr
          echo "mapr    ALL=(ALL)    NOPASSWD:ALL" >> /etc/sudoers
          echo "Defaults:mapr !requiretty" >> /etc/sudoers
          echo "Defaults:root !requiretty" >> /etc/sudoers
          echo "mapr" | sudo passwd --force --stdin mapr
          sed -i 's|PasswordAuthentication no|PasswordAuthentication yes|g' /etc/ssh/sshd_config
          service sshd restart
      register: mapr_cluster
    - name: Waiting for the instance to come
      local_action: wait_for
                    host={{ item.private_ip }}
                    state=started
                    port=22
      with_items: "{{ mapr_cluster.instances }} "
    - name: Delete prev ver of nodes_inventory file if it exists 
      file: 
        path: "{{ nodes_inventory }}"
        state: absent
    - name: Delete prev ver of nodes_inventory file if it exists 
      file: 
        path: "{{ nodes_inventory }}"
        state: touch
    - name: Create new nodes_inventory file with generated instances
      lineinfile: 
        path: "{{ nodes_inventory }}"
        state: present
        line: '[cluster]'
    - name: Add the newly created MapR Cluster instance(s) to new nodes_inventory file
      local_action: lineinfile 
                    state=present
                    dest="{{ nodes_inventory }}" 
                    line={{ item.private_ip }}
      with_items: "{{ mapr_cluster.instances }}"


    - name: launching one MAPR-CLIENT node (with tags required for SE-VPC)
      ec2:
        region: "{{ region }}"  
        key_name: "{{ key }}"  
        instance_type: "{{ instance_type }}"    
        image: "{{ image }}"  
        vpc_subnet_id: "{{ subnet_id }}"
        group_id: "{{ sec_grp_id }}"
        wait: yes    
        instance_tags:  
          Name: "{{ NAME|default('CHANGE-THIS-DEFAULT-PROJ-NAME') }}-client" # NOTE: Specify USER_TAG param on cmd line
          user: rradhakrishnan  # required tag for MAPRSE-AWS account
          User: rradhakrishnan  # required tag for MAPRSE-AWS account
          Note: "{{ NOTE|default('dev') }}" # NOTE: If necessary, add info to this NOTE param on cmd line
        user_data: |
          #!/bin/bash -x
          adduser -m --uid 5000 --user-group mapr
          usermod -a -G root mapr
          echo "mapr    ALL=(ALL)    NOPASSWD:ALL" >> /etc/sudoers
          echo "Defaults:mapr !requiretty" >> /etc/sudoers
          echo "Defaults:root !requiretty" >> /etc/sudoers
          echo "mapr" | sudo passwd --force --stdin mapr
          sed -i 's|PasswordAuthentication no|PasswordAuthentication yes|g' /etc/ssh/sshd_config
          service sshd restart
      register: mapr_client_node
    - name: Add the newly created MapR Client node to new nodes_inventory file
      local_action: lineinfile 
                    state=present
                    dest="{{ nodes_inventory }}" 
                    regexp=EOF
                    line="[client]\n{{ item.private_ip }}"
      with_items: "{{ mapr_client_node.instances }}"

    # - name: Print ec2 var 
    #   debug: 
    #     msg: "Val: {{ item.private_ip }} "
    #   with_items: "{{ ec2.instances }}"